/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  IInterpreterCallerConsumer,
  IInterpreterCallerConsumerInterface,
  DeployerDiscoverableMetaV1ConstructionConfigStruct,
} from "../../../../../contracts/test/interpreter/runtime/IInterpreterCallerConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "meta_",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "deployer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "meta",
            type: "bytes",
          },
        ],
        internalType: "struct DeployerDiscoverableMetaV1ConstructionConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "unmeta",
        type: "bytes",
      },
    ],
    name: "NotRainMetaV1",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "expectedHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "actualHash",
        type: "bytes32",
      },
    ],
    name: "UnexpectedMetaHash",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subject",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "meta",
        type: "bytes",
      },
    ],
    name: "MetaV1",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "meta_",
        type: "bytes",
      },
    ],
    name: "checkIsRainMetaV1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "expectedHash_",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "meta_",
        type: "bytes",
      },
    ],
    name: "checkMeta",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer_",
        type: "address",
      },
    ],
    name: "deployTouchExpression",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000b5e38038062000b5e833981016040819052620000349162000300565b81805190602001208162000053828260200151620000ab60201b60201c565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b13916200008c9133913091620003f8565b60405180910390a18051620000a190620000f2565b5050505062000560565b80516020820120828114620000e25760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b620000ed82620001bd565b505050565b60408051600080825260208201909252819081906001600160a01b03851690635511cb67908362000134565b60608152602001906001900390816200011e5790505b5060408051600080825260208201908152818301928390526001600160e01b031960e086901b169092526200016e92916044820162000467565b6060604051808303816000875af11580156200018e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b49190620004f0565b50505050505050565b620001c881620001ed565b620001ea5780604051630c89984b60e31b8152600401620000d9919062000544565b50565b60006008825110156200020257506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200025057818101518382015260200162000236565b50506000910152565b600082601f8301126200026b57600080fd5b81516001600160401b03808211156200028857620002886200021d565b604051601f8301601f19908116603f01168101908282118183101715620002b357620002b36200021d565b81604052838152866020858801011115620002cd57600080fd5b620002e084602083016020890162000233565b9695505050505050565b6001600160a01b0381168114620001ea57600080fd5b600080604083850312156200031457600080fd5b82516001600160401b03808211156200032c57600080fd5b6200033a8683870162000259565b935060208501519150808211156200035157600080fd5b90840190604082870312156200036657600080fd5b6040516040810181811083821117156200038457620003846200021d565b60405282516200039481620002ea565b8152602083015182811115620003a957600080fd5b620003b78882860162000259565b6020830152508093505050509250929050565b60008151808452620003e481602086016020860162000233565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004216060830184620003ca565b95945050505050565b600081518084526020808501945080840160005b838110156200045c578151875295820195908201906001016200043e565b509495945050505050565b6000606082016060835280865180835260808501915060808160051b8601019250602080890160005b83811015620004c257607f19888703018552620004af868351620003ca565b9550938201939082019060010162000490565b505085840381870152505050620004da81866200042a565b90508281036040840152620002e081856200042a565b6000806000606084860312156200050657600080fd5b83516200051381620002ea565b60208501519093506200052681620002ea565b60408501519092506200053981620002ea565b809150509250925092565b602081526000620005596020830184620003ca565b9392505050565b6105ee80620005706000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a5154e7614610046578063afcd8d511461006d578063b8df113914610082575b600080fd5b61005961005436600461035f565b610095565b604051901515815260200160405180910390f35b61008061007b3660046103e5565b6100b1565b005b610059610090366004610409565b6100bd565b60006100a88380519060200120836100ce565b50600192915050565b6100ba8161012b565b50565b60006100c882610214565b92915050565b8051602082012082811461011d576040517f74fe10f000000000000000000000000000000000000000000000000000000000815260048101849052602481018290526044015b60405180910390fd5b61012682610244565b505050565b604080516000808252602082019092528190819073ffffffffffffffffffffffffffffffffffffffff851690635511cb679083610178565b60608152602001906001900390816101635790505b5060408051600080825260208201908152818301928390527fffffffff0000000000000000000000000000000000000000000000000000000060e086901b169092526101c89291604482016104e5565b6060604051808303816000875af11580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b919061058e565b50505050505050565b600060088251101561022857506000919050565b506008015167ffffffffffffffff1667ff0a89c674ee78741490565b61024d81610214565b6100ba57806040517f644cc25800000000000000000000000000000000000000000000000000000000815260040161011491906105db565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126102c557600080fd5b813567ffffffffffffffff808211156102e0576102e0610285565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561032657610326610285565b8160405283815286602085880101111561033f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561037257600080fd5b823567ffffffffffffffff8082111561038a57600080fd5b610396868387016102b4565b935060208501359150808211156103ac57600080fd5b506103b9858286016102b4565b9150509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146100ba57600080fd5b6000602082840312156103f757600080fd5b8135610402816103c3565b9392505050565b60006020828403121561041b57600080fd5b813567ffffffffffffffff81111561043257600080fd5b61043e848285016102b4565b949350505050565b6000815180845260005b8181101561046c57602081850181015186830182015201610450565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b600081518084526020808501945080840160005b838110156104da578151875295820195908201906001016104be565b509495945050505050565b6000606082016060835280865180835260808501915060808160051b8601019250602080890160005b8381101561055a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80888703018552610548868351610446565b9550938201939082019060010161050e565b50508584038187015250505061057081866104aa565b9050828103604084015261058481856104aa565b9695505050505050565b6000806000606084860312156105a357600080fd5b83516105ae816103c3565b60208501519093506105bf816103c3565b60408501519092506105d0816103c3565b809150509250925092565b602081526000610402602083018461044656";

type IInterpreterCallerConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IInterpreterCallerConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IInterpreterCallerConsumer__factory extends ContractFactory {
  constructor(...args: IInterpreterCallerConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    meta_: PromiseOrValue<BytesLike>,
    config_: DeployerDiscoverableMetaV1ConstructionConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IInterpreterCallerConsumer> {
    return super.deploy(
      meta_,
      config_,
      overrides || {}
    ) as Promise<IInterpreterCallerConsumer>;
  }
  override getDeployTransaction(
    meta_: PromiseOrValue<BytesLike>,
    config_: DeployerDiscoverableMetaV1ConstructionConfigStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(meta_, config_, overrides || {});
  }
  override attach(address: string): IInterpreterCallerConsumer {
    return super.attach(address) as IInterpreterCallerConsumer;
  }
  override connect(signer: Signer): IInterpreterCallerConsumer__factory {
    return super.connect(signer) as IInterpreterCallerConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IInterpreterCallerConsumerInterface {
    return new utils.Interface(_abi) as IInterpreterCallerConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInterpreterCallerConsumer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IInterpreterCallerConsumer;
  }
}
